{
  "hash": "14178c5776f3dd56fbd4e87ca0499385",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 8: Supplement to Hands-on Exercise 8\"\nauthor: \"Dr. Kam Tin Seong<br/>Assoc. Professor of Information Systems(Practice)\"\ninstitute: \"School of Computing and Information Systems,<br/>Singapore Management University\"\ndate: \"2024-10-31\"\nformat: \n  revealjs:\n    width: 1600\n    height: 900\n    show-notes: false\n    slide-number: true\n    show-slide-number: all\ndate-format: \"DD MMM YYYY\"\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Getting Started\n\n### Installing and Loading R packages\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse,\n               knitr, kableExtra)\n```\n:::\n\n\n:::\n\n## Preparing Data\n\n::: panel-tabset\n### Data import\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n:::\n\n### Data Sampling\n\nCalibrating predictive models are computational intensive, especially random forest method is used. For quick prototyping, a 10% sample will be selected at random from the data by using the code chunk below.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample <- mdata %>%\n  sample_n(1500)\n```\n:::\n\n\n:::\n\n### Checking of overlapping point\n\n::: callout-warning\nWhen using GWmodel to calibrate explanatory or predictive models, it is very important to ensure that there are no overlapping point features\n:::\n\nThe code chunk below is used to check if there are overlapping point features.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- HDB_sample %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\n```\n:::\n\n\n:::\n\n### Spatial jitter\n\nIn the code code chunk below, [`st_jitter()`](https://r-spatial.github.io/sf/reference/st_jitter.html) of **sf** package is used to move the point features by 5m to avoid overlapping point features. \n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample <- HDB_sample %>%\n  st_jitter(amount = 5)\n```\n:::\n\n\n:::\n:::\n\n## Data Sampling\n\nThe entire data are split into training and test data sets with 65% and 35% respectively by using *initial_split()* of **rsample** package. rsample is one of the package of tigymodels.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(HDB_sample, \n                              prop = 6.67/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n\n:::\n\n------------------------------------------------------------------------\n\n### Multicollinearity check\n\n::: panel-tabset\n\n#### The code\nIn order to avoid multicollineariy.  In the code chunk below, [`ggcorrmat()`](https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/ggcorrmat.html) of **ggstatsplot** is used to plot a correlation matrix to check if there are pairs of highly correlated independent variables.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])\n```\n:::\n\n\n:::\n\n#### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-revealjs/unnamed-chunk-8-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n## Building a non-spatial multiple linear regression\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: panel-tabset\n### The report\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.862       RMSE                    60813.316 \nR-Squared                   0.742       MSE                3754578098.252 \nAdj. R-Squared              0.739       Coef. Var                  14.255 \nPred R-Squared              0.734       AIC                     24901.005 \nMAE                     45987.256       SBC                     24979.529 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                      \n-------------------------------------------------------------------------------\n                    Sum of                                                     \n                   Squares         DF         Mean Square       F         Sig. \n-------------------------------------------------------------------------------\nRegression    1.065708e+13         14    761220078101.236    202.745    0.0000 \nResidual      3.698259e+12        985      3754578098.252                      \nTotal         1.435534e+13        999                                          \n-------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t        Sig          lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    115703.696     34303.409                   3.373    0.001     48387.533    183019.860 \n          floor_area_sqm      2778.618       292.262        0.165      9.507    0.000      2205.089      3352.146 \n            storey_order     12698.165      1070.950        0.211     11.857    0.000     10596.559     14799.771 \n    remaining_lease_mths       350.252        14.596        0.450     23.997    0.000       321.610       378.894 \n                PROX_CBD    -16225.588       630.092       -0.572    -25.751    0.000    -17462.065    -14989.110 \n        PROX_ELDERLYCARE    -11330.930      3220.845       -0.061     -3.518    0.000    -17651.436     -5010.423 \n             PROX_HAWKER    -19964.070      4021.046       -0.087     -4.965    0.000    -27854.872    -12073.268 \n                PROX_MRT    -39652.516      5412.288       -0.130     -7.326    0.000    -50273.456    -29031.577 \n               PROX_PARK    -15878.322      4609.199       -0.061     -3.445    0.001    -24923.300     -6833.344 \n               PROX_MALL    -15910.922      6438.111       -0.048     -2.471    0.014    -28544.911     -3276.933 \n        PROX_SUPERMARKET    -18928.514     13304.965       -0.025     -1.423    0.155    -45037.848      7180.821 \nWITHIN_350M_KINDERGARTEN      9309.735      2024.293        0.079      4.599    0.000      5337.313     13282.157 \n   WITHIN_350M_CHILDCARE     -1619.514      1180.948       -0.026     -1.371    0.171     -3936.977       697.948 \n         WITHIN_350M_BUS      -447.695       738.715       -0.011     -0.606    0.545     -1897.331      1001.940 \n       WITHIN_1KM_PRISCH    -10698.012      1543.511       -0.138     -6.931    0.000    -13726.960     -7669.065 \n------------------------------------------------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n\n\n### The code chunk\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n```\n:::\n\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n### Multicollinearity check with VIF\n\n::: panel-tabset\n#### VIF\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvif <- performance::check_collinearity(price_mlr)\nkable(vif, \n      caption = \"Variance Inflation Factor (VIF) Results\") %>%\n  kable_styling(font_size = 18) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 18px; margin-left: auto; margin-right: auto;\">\n<caption style=\"font-size: initial !important;\">Variance Inflation Factor (VIF) Results</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:right;\"> VIF </th>\n   <th style=\"text-align:right;\"> VIF_CI_low </th>\n   <th style=\"text-align:right;\"> VIF_CI_high </th>\n   <th style=\"text-align:right;\"> SE_factor </th>\n   <th style=\"text-align:right;\"> Tolerance </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_low </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_high </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> floor_area_sqm </td>\n   <td style=\"text-align:right;\"> 1.146686 </td>\n   <td style=\"text-align:right;\"> 1.085743 </td>\n   <td style=\"text-align:right;\"> 1.250945 </td>\n   <td style=\"text-align:right;\"> 1.070834 </td>\n   <td style=\"text-align:right;\"> 0.8720785 </td>\n   <td style=\"text-align:right;\"> 0.7993954 </td>\n   <td style=\"text-align:right;\"> 0.9210287 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> storey_order </td>\n   <td style=\"text-align:right;\"> 1.206020 </td>\n   <td style=\"text-align:right;\"> 1.135720 </td>\n   <td style=\"text-align:right;\"> 1.312734 </td>\n   <td style=\"text-align:right;\"> 1.098189 </td>\n   <td style=\"text-align:right;\"> 0.8291736 </td>\n   <td style=\"text-align:right;\"> 0.7617690 </td>\n   <td style=\"text-align:right;\"> 0.8804986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> remaining_lease_mths </td>\n   <td style=\"text-align:right;\"> 1.343645 </td>\n   <td style=\"text-align:right;\"> 1.254833 </td>\n   <td style=\"text-align:right;\"> 1.463410 </td>\n   <td style=\"text-align:right;\"> 1.159157 </td>\n   <td style=\"text-align:right;\"> 0.7442440 </td>\n   <td style=\"text-align:right;\"> 0.6833358 </td>\n   <td style=\"text-align:right;\"> 0.7969186 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_CBD </td>\n   <td style=\"text-align:right;\"> 1.887898 </td>\n   <td style=\"text-align:right;\"> 1.733977 </td>\n   <td style=\"text-align:right;\"> 2.074096 </td>\n   <td style=\"text-align:right;\"> 1.374008 </td>\n   <td style=\"text-align:right;\"> 0.5296898 </td>\n   <td style=\"text-align:right;\"> 0.4821378 </td>\n   <td style=\"text-align:right;\"> 0.5767088 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_ELDERLYCARE </td>\n   <td style=\"text-align:right;\"> 1.140418 </td>\n   <td style=\"text-align:right;\"> 1.080572 </td>\n   <td style=\"text-align:right;\"> 1.244716 </td>\n   <td style=\"text-align:right;\"> 1.067904 </td>\n   <td style=\"text-align:right;\"> 0.8768712 </td>\n   <td style=\"text-align:right;\"> 0.8033960 </td>\n   <td style=\"text-align:right;\"> 0.9254357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_HAWKER </td>\n   <td style=\"text-align:right;\"> 1.183865 </td>\n   <td style=\"text-align:right;\"> 1.116887 </td>\n   <td style=\"text-align:right;\"> 1.289223 </td>\n   <td style=\"text-align:right;\"> 1.088056 </td>\n   <td style=\"text-align:right;\"> 0.8446907 </td>\n   <td style=\"text-align:right;\"> 0.7756609 </td>\n   <td style=\"text-align:right;\"> 0.8953457 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MRT </td>\n   <td style=\"text-align:right;\"> 1.211390 </td>\n   <td style=\"text-align:right;\"> 1.140307 </td>\n   <td style=\"text-align:right;\"> 1.318485 </td>\n   <td style=\"text-align:right;\"> 1.100632 </td>\n   <td style=\"text-align:right;\"> 0.8254980 </td>\n   <td style=\"text-align:right;\"> 0.7584464 </td>\n   <td style=\"text-align:right;\"> 0.8769566 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_PARK </td>\n   <td style=\"text-align:right;\"> 1.186122 </td>\n   <td style=\"text-align:right;\"> 1.118797 </td>\n   <td style=\"text-align:right;\"> 1.291599 </td>\n   <td style=\"text-align:right;\"> 1.089092 </td>\n   <td style=\"text-align:right;\"> 0.8430839 </td>\n   <td style=\"text-align:right;\"> 0.7742340 </td>\n   <td style=\"text-align:right;\"> 0.8938169 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MALL </td>\n   <td style=\"text-align:right;\"> 1.435504 </td>\n   <td style=\"text-align:right;\"> 1.335252 </td>\n   <td style=\"text-align:right;\"> 1.565736 </td>\n   <td style=\"text-align:right;\"> 1.198125 </td>\n   <td style=\"text-align:right;\"> 0.6966193 </td>\n   <td style=\"text-align:right;\"> 0.6386771 </td>\n   <td style=\"text-align:right;\"> 0.7489224 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_SUPERMARKET </td>\n   <td style=\"text-align:right;\"> 1.226727 </td>\n   <td style=\"text-align:right;\"> 1.153448 </td>\n   <td style=\"text-align:right;\"> 1.335000 </td>\n   <td style=\"text-align:right;\"> 1.107577 </td>\n   <td style=\"text-align:right;\"> 0.8151773 </td>\n   <td style=\"text-align:right;\"> 0.7490638 </td>\n   <td style=\"text-align:right;\"> 0.8669656 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_KINDERGARTEN </td>\n   <td style=\"text-align:right;\"> 1.123989 </td>\n   <td style=\"text-align:right;\"> 1.067172 </td>\n   <td style=\"text-align:right;\"> 1.228865 </td>\n   <td style=\"text-align:right;\"> 1.060183 </td>\n   <td style=\"text-align:right;\"> 0.8896886 </td>\n   <td style=\"text-align:right;\"> 0.8137594 </td>\n   <td style=\"text-align:right;\"> 0.9370564 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_CHILDCARE </td>\n   <td style=\"text-align:right;\"> 1.387119 </td>\n   <td style=\"text-align:right;\"> 1.292841 </td>\n   <td style=\"text-align:right;\"> 1.511748 </td>\n   <td style=\"text-align:right;\"> 1.177760 </td>\n   <td style=\"text-align:right;\"> 0.7209189 </td>\n   <td style=\"text-align:right;\"> 0.6614860 </td>\n   <td style=\"text-align:right;\"> 0.7734902 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_BUS </td>\n   <td style=\"text-align:right;\"> 1.193498 </td>\n   <td style=\"text-align:right;\"> 1.125056 </td>\n   <td style=\"text-align:right;\"> 1.299398 </td>\n   <td style=\"text-align:right;\"> 1.092473 </td>\n   <td style=\"text-align:right;\"> 0.8378731 </td>\n   <td style=\"text-align:right;\"> 0.7695869 </td>\n   <td style=\"text-align:right;\"> 0.8888447 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_1KM_PRISCH </td>\n   <td style=\"text-align:right;\"> 1.508943 </td>\n   <td style=\"text-align:right;\"> 1.399770 </td>\n   <td style=\"text-align:right;\"> 1.647930 </td>\n   <td style=\"text-align:right;\"> 1.228390 </td>\n   <td style=\"text-align:right;\"> 0.6627154 </td>\n   <td style=\"text-align:right;\"> 0.6068219 </td>\n   <td style=\"text-align:right;\"> 0.7144029 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n#### Plotting VIF\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(vif) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Predictive Modelling with gwr\n### Computing adaptive bandwidth\n\n::: panel-tabset\n\n#### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n\n:::\n\n#### The output\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n---\n\n### Model calibration\n\n::: panel-tabset\n\n#### The code\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n```\n:::\n\n\n:::\n\n#### The output\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-31 07:40:27.013106 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 1000\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-167624  -37265    -415   34811  224601 \n\n   Coefficients:\n                            Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)              115703.7    34303.4   3.373 0.000773 ***\n   floor_area_sqm             2778.6      292.3   9.507  < 2e-16 ***\n   storey_order              12698.2     1071.0  11.857  < 2e-16 ***\n   remaining_lease_mths        350.2       14.6  23.997  < 2e-16 ***\n   PROX_CBD                 -16225.6      630.1 -25.751  < 2e-16 ***\n   PROX_ELDERLYCARE         -11330.9     3220.8  -3.518 0.000455 ***\n   PROX_HAWKER              -19964.1     4021.1  -4.965 8.10e-07 ***\n   PROX_MRT                 -39652.5     5412.3  -7.326 4.92e-13 ***\n   PROX_PARK                -15878.3     4609.2  -3.445 0.000595 ***\n   PROX_MALL                -15910.9     6438.1  -2.471 0.013628 *  \n   PROX_SUPERMARKET         -18928.5    13305.0  -1.423 0.155150    \n   WITHIN_350M_KINDERGARTEN   9309.7     2024.3   4.599 4.80e-06 ***\n   WITHIN_350M_CHILDCARE     -1619.5     1181.0  -1.371 0.170572    \n   WITHIN_350M_BUS            -447.7      738.7  -0.606 0.544624    \n   WITHIN_1KM_PRISCH        -10698.0     1543.5  -6.931 7.55e-12 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61270 on 985 degrees of freedom\n   Multiple R-squared: 0.7424\n   Adjusted R-squared: 0.7387 \n   F-statistic: 202.7 on 14 and 985 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.698259e+12\n   Sigma(hat): 60874.22\n   AIC:  24901.01\n   AICc:  24901.56\n   BIC:  24090.05\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 19 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -1850662.06  -213226.88    18750.18   257759.31\n   floor_area_sqm              -4400.58     1227.91     2020.59     3305.91\n   storey_order                 3226.46     8118.79    10349.25    13840.12\n   remaining_lease_mths         -567.87      343.26      422.16      502.70\n   PROX_CBD                  -107227.77   -23329.41   -10632.77     -983.94\n   PROX_ELDERLYCARE          -262405.86   -25815.67    -5892.75    18397.75\n   PROX_HAWKER               -217237.20   -36313.19    -9931.90    21441.49\n   PROX_MRT                  -305069.89   -92410.01   -57000.64   -20410.27\n   PROX_PARK                 -256758.99   -33742.57   -16756.73     8462.87\n   PROX_MALL                 -274223.06   -35730.88     6953.21    49221.11\n   PROX_SUPERMARKET          -176209.93   -43225.75    -7954.90    30114.02\n   WITHIN_350M_KINDERGARTEN   -43387.03    -9117.13    -2525.06     5559.95\n   WITHIN_350M_CHILDCARE      -15152.19    -2203.26     1242.91     3469.04\n   WITHIN_350M_BUS            -10848.37    -1806.81      523.89     2318.23\n   WITHIN_1KM_PRISCH          -50593.97    -4155.12      348.43     4951.49\n                                  Max.\n   Intercept                1668279.80\n   floor_area_sqm              7834.73\n   storey_order               26827.97\n   remaining_lease_mths         792.01\n   PROX_CBD                  130929.41\n   PROX_ELDERLYCARE          178770.13\n   PROX_HAWKER               146976.62\n   PROX_MRT                  126271.80\n   PROX_PARK                  90469.23\n   PROX_MALL                 342520.92\n   PROX_SUPERMARKET          189007.16\n   WITHIN_350M_KINDERGARTEN   40812.13\n   WITHIN_350M_CHILDCARE      15729.60\n   WITHIN_350M_BUS            11766.10\n   WITHIN_1KM_PRISCH          32922.16\n   ************************Diagnostic information*************************\n   Number of data points: 1000 \n   Effective number of parameters (2trace(S) - trace(S'S)): 419.14 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 580.86 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 24103.65 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 23393.52 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 24424.31 \n   Residual sum of squares: 5.99674e+11 \n   R-square value:  0.9582264 \n   Adjusted R-square value:  0.9280312 \n\n   ***********************************************************************\n   Program stops at: 2024-10-31 07:40:27.392171 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n## Predictive Modelling with MLR\n\n### Predicting with test data\n\n::: panel-tabset\n### Test data bw\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### Predicting\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data, \n                        predictdata = test_data, \n                        bw=bw_adaptive, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n```\n:::\n\n\n:::\n:::\n\n## Predictive Modelling: RF method\n\n::: panel-tabset\n### Data preparation\n\nFirstly, code chunk below is used to extract the coordinates of training and test data sets\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(HDB_sample)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n\n:::\n\nNext, code chunk below is used to drop the geometry column of both training and test data sets.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom <- train_data %>%\n  st_drop_geometry()\n```\n:::\n\n\n:::\n\n### Calibrating RF model\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\n```\n:::\n\n\n:::\n\n### Model output\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      1000 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       2289284270 \nR squared (OOB):                  0.8406868 \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## Predictive Modelling: SpatialML method\n\n::: panel-tabset\n### Calibrating with grf\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + \n                       storey_order + remaining_lease_mths + \n                       PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n                       PROX_MRT + PROX_PARK + PROX_MALL + \n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data_nogeom, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n:::\n\n## Predicting by using the test data\n\n::: panel-tabset\n### Preparing the test data\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(\n  test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n:::\n\n### Predicting with the test data\n\nIn the code chunk below, `predict.grf()` of **spatialML** for predicting re-sale prices in the **test data** set (i.e. *test_data_nogeom*)\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data_nogeom, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n```\n:::\n\n\n:::\n\n### Creating DF\n\nNext, the code chunk below is used to convert the output from `predict.grf()` into a data.frame.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred_df <- as.data.frame(gwRF_pred)\n```\n:::\n\n\n:::\n\nThen, `cbind()` is used to append fields in GRF_pred_df data.frame onto test_data.\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_pred <- cbind(test_data, \n                        GRF_pred_df)\n```\n:::\n\n\n:::\n:::\n\n## Visualising the predicted values\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex08_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n\n### The code chunk\n\n::: {style=\"font-size: 1.50em\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_pred,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n```\n:::\n\n\n:::\n:::\n\n",
    "supporting": [
      "In-class_Ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}